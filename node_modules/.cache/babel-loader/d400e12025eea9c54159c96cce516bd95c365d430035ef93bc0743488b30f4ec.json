{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Francisco Chong\\\\Desktop\\\\Proyecto Final\\\\frontengi\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      setErrorMessage('Por favor, rellena todos los campos');\n      return;\n    }\n    const loginData = {\n      email,\n      password\n    };\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:3000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData)\n      });\n      const data = await response.json();\n      console.log('Login response:', data); // Para depuración\n\n      if (response.ok) {\n        setErrorMessage('');\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('userId', data.userId);\n        localStorage.setItem('userName', data.userName || data.name);\n        localStorage.setItem('userRole', data.role);\n\n        // Verificar que se guardó correctamente\n        console.log('Stored in localStorage:', {\n          token: localStorage.getItem('token'),\n          userId: localStorage.getItem('userId'),\n          userName: localStorage.getItem('userName'),\n          userRole: localStorage.getItem('userRole')\n        });\n        navigate('/menu');\n      } else {\n        setErrorMessage(data.message || 'Correo o contraseña incorrectos');\n      }\n    } catch (error) {\n      console.error('Error al conectar con el servidor:', error);\n      setErrorMessage('Error al conectar con el servidor. Por favor, inténtalo de nuevo más tarde.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Correo Electr\\xF3nico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Iniciando sesión...' : 'Ingresar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"KRvufnsoFYjAi7XsiZwvEESpSyQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","loading","setLoading","navigate","handleSubmit","e","preventDefault","loginData","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","localStorage","setItem","token","userId","userName","name","role","getItem","userRole","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Francisco Chong/Desktop/Proyecto Final/frontengi/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!email || !password) {\r\n            setErrorMessage('Por favor, rellena todos los campos');\r\n            return;\r\n        }\r\n        const loginData = { email, password };\r\n        setLoading(true);\r\n    \r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(loginData),\r\n            });\r\n            const data = await response.json();\r\n            console.log('Login response:', data);  // Para depuración\r\n\r\n            if (response.ok) {\r\n                setErrorMessage('');\r\n                localStorage.setItem('token', data.token);\r\n                localStorage.setItem('userId', data.userId);\r\n                localStorage.setItem('userName', data.userName || data.name);\r\n                localStorage.setItem('userRole', data.role);\r\n\r\n                // Verificar que se guardó correctamente\r\n                console.log('Stored in localStorage:', {\r\n                    token: localStorage.getItem('token'),\r\n                    userId: localStorage.getItem('userId'),\r\n                    userName: localStorage.getItem('userName'),\r\n                    userRole: localStorage.getItem('userRole')\r\n                });\r\n\r\n                navigate('/menu');\r\n            } else {\r\n                setErrorMessage(data.message || 'Correo o contraseña incorrectos');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al conectar con el servidor:', error);\r\n            setErrorMessage('Error al conectar con el servidor. Por favor, inténtalo de nuevo más tarde.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"login-container\">\r\n                <h2>Iniciar Sesión</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"email\">Correo Electrónico</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"password\">Contraseña</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" disabled={loading}>\r\n                        {loading ? 'Iniciando sesión...' : 'Ingresar'}\r\n                    </button>\r\n                </form>\r\n                {errorMessage && <p className=\"error\">{errorMessage}</p>}\r\n            </div>\r\n            <div className=\"debug-info\">\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}